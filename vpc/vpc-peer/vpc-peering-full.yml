AWSTemplateFormatVersion: '2010-09-09'
Description: VPC Peering between 2 VPCs with private subnets and EC2 instances

Parameters:
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: testkey
    Description: Name of an existing EC2 KeyPair to SSH

Resources:

  ########### VPCs ###########

  RequesterVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: RequesterVPC

  AccepterVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.1.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: AccepterVPC

  ########### Subnets ###########

  RequesterSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RequesterVPC
      CidrBlock: 10.0.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false   # Private subnet

  AccepterSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref AccepterVPC
      CidrBlock: 10.1.1.0/24
      AvailabilityZone: !Select [0, !GetAZs '']
      MapPublicIpOnLaunch: false   # Private subnet

  ########### Route Tables ###########

  RequesterRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref RequesterVPC

  AccepterRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref AccepterVPC

  RequesterRouteToPeering:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RequesterRouteTable
      DestinationCidrBlock: 10.1.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeering

  AccepterRouteToPeering:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref AccepterRouteTable
      DestinationCidrBlock: 10.0.0.0/16
      VpcPeeringConnectionId: !Ref VPCPeering

  RequesterAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref RequesterSubnet
      RouteTableId: !Ref RequesterRouteTable

  AccepterAssoc:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref AccepterSubnet
      RouteTableId: !Ref AccepterRouteTable

  ########### Peering ###########

  VPCPeering:
    Type: AWS::EC2::VPCPeeringConnection
    Properties:
      VpcId: !Ref RequesterVPC
      PeerVpcId: !Ref AccepterVPC
      Tags:
        - Key: Name
          Value: VPCPeeringRequesterToAccepter

  ########### Security Groups ###########

  RequesterEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and ICMP from Accepter VPC
      VpcId: !Ref RequesterVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.1.0.0/16
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.1.0.0/16

  AccepterEC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow SSH and ICMP from Requester VPC
      VpcId: !Ref AccepterVPC
      SecurityGroupIngress:
        - IpProtocol: icmp
          FromPort: -1
          ToPort: -1
          CidrIp: 10.0.0.0/16
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 10.0.0.0/16

  ########### EC2 Instances ###########

  RequesterEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      SubnetId: !Ref RequesterSubnet
      SecurityGroupIds:
        - !Ref RequesterEC2SecurityGroup
      ImageId: !Sub "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}"
      Tags:
        - Key: Name
          Value: EC2-Requester

  AccepterEC2:
    Type: AWS::EC2::Instance
    Properties:
      InstanceType: t3.micro
      KeyName: !Ref KeyName
      SubnetId: !Ref AccepterSubnet
      SecurityGroupIds:
        - !Ref AccepterEC2SecurityGroup
      ImageId: !Sub "{{resolve:ssm:/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2}}"
      Tags:
        - Key: Name
          Value: EC2-Accepter

Outputs:
  RequesterEC2PrivateIP:
    Value: !GetAtt RequesterEC2.PrivateIp
    Description: Private IP of the EC2 in RequesterVPC

  AccepterEC2PrivateIP:
    Value: !GetAtt AccepterEC2.PrivateIp
    Description: Private IP of the EC2 in AccepterVPC

  PeeringConnectionId:
    Value: !Ref VPCPeering
    Description: VPC Peering Connection ID
